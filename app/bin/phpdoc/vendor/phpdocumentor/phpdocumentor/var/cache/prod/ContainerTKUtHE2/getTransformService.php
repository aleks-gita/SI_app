<?php

namespace ContainerTKUtHE2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTransformService extends phpDocumentor_KernelProdContainer
{
    /*
     * Gets the private 'phpDocumentor\Pipeline\Stage\Transform' shared autowired service.
     *
     * @return \phpDocumentor\Pipeline\Stage\Transform
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Pipeline'.\DIRECTORY_SEPARATOR.'Stage'.\DIRECTORY_SEPARATOR.'Transform.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'CompilerPassInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Transformer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Template'.\DIRECTORY_SEPARATOR.'Collection.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Template'.\DIRECTORY_SEPARATOR.'Factory.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'Collection.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'WriterAbstract.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'IoTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'FileIo.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'Sourcecode.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'Twig.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'PathGenerator.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Transformer'.\DIRECTORY_SEPARATOR.'Writer'.\DIRECTORY_SEPARATOR.'Pathfinder.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Compiler.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Pass'.\DIRECTORY_SEPARATOR.'ElementsIndexBuilder.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Pass'.\DIRECTORY_SEPARATOR.'MarkerFromTagsExtractor.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Pass'.\DIRECTORY_SEPARATOR.'PackageTreeBuilder.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Pass'.\DIRECTORY_SEPARATOR.'NamespaceTreeBuilder.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Pass'.\DIRECTORY_SEPARATOR.'ResolveInlineMarkers.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Pass'.\DIRECTORY_SEPARATOR.'Debug.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Descriptor'.\DIRECTORY_SEPARATOR.'ProjectAnalyzer.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Linker'.\DIRECTORY_SEPARATOR.'Linker.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'phpDocumentor'.\DIRECTORY_SEPARATOR.'Compiler'.\DIRECTORY_SEPARATOR.'Linker'.\DIRECTORY_SEPARATOR.'DescriptorRepository.php';
        include_once \dirname(__DIR__, 5).''.\DIRECTORY_SEPARATOR.'reflection-docblock'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'DocBlock'.\DIRECTORY_SEPARATOR.'ExampleFinder.php';

        $a = ($container->privates['phpDocumentor\\Parser\\FlySystemFactory'] ?? $container->load('getFlySystemFactoryService'));
        $b = new \phpDocumentor\Transformer\Writer\Collection();
        $b->offsetSet('FileIo', new \phpDocumentor\Transformer\Writer\FileIo());
        $b->offsetSet('sourcecode', new \phpDocumentor\Transformer\Writer\Sourcecode());
        $b->offsetSet('Graph', ($container->privates['phpDocumentor\\Transformer\\Writer\\Graph'] ?? $container->load('getGraphService')));
        $b->offsetSet('twig', new \phpDocumentor\Transformer\Writer\Twig(($container->privates['phpDocumentor\\Transformer\\Writer\\Twig\\EnvironmentFactory'] ?? $container->load('getEnvironmentFactoryService')), new \phpDocumentor\Transformer\Writer\PathGenerator(($container->privates['phpDocumentor\\Transformer\\Router\\Router'] ?? $container->load('getRouter2Service')), new \phpDocumentor\Transformer\Writer\Pathfinder())));
        $b->offsetSet('RenderGuide', ($container->privates['phpDocumentor\\Transformer\\Writer\\RenderGuide'] ?? $container->load('getRenderGuideService')));
        $c = ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'));

        $d = new \phpDocumentor\Transformer\Transformer(new \phpDocumentor\Transformer\Template\Collection(new \phpDocumentor\Transformer\Template\Factory($a, (new \phpDocumentor\Application())->templateDirectory()), $b), $b, $c, $a);
        $e = new \phpDocumentor\Compiler\Compiler();
        $e->insert(new \phpDocumentor\Compiler\Pass\ElementsIndexBuilder(), 15000);
        $e->insert(new \phpDocumentor\Compiler\Pass\MarkerFromTagsExtractor(), 9000);
        $e->insert(new \phpDocumentor\Compiler\Pass\PackageTreeBuilder(($container->privates['phpDocumentor\\Parser\\Parser'] ?? $container->load('getParserService'))), 9001);
        $e->insert(new \phpDocumentor\Compiler\Pass\NamespaceTreeBuilder(), 9000);
        $e->insert(new \phpDocumentor\Compiler\Pass\ResolveInlineMarkers(), 9000);
        $e->insert(new \phpDocumentor\Compiler\Pass\Debug($c, new \phpDocumentor\Descriptor\ProjectAnalyzer()), 1000);
        $e->insert(new \phpDocumentor\Compiler\Linker\Linker($container->parameters['linker.substitutions'], new \phpDocumentor\Compiler\Linker\DescriptorRepository()));
        $e->insert($d, 5000);

        return $container->privates['phpDocumentor\\Pipeline\\Stage\\Transform'] = new \phpDocumentor\Pipeline\Stage\Transform($d, $e, $c, ($container->privates['phpDocumentor\\Reflection\\DocBlock\\ExampleFinder'] ?? ($container->privates['phpDocumentor\\Reflection\\DocBlock\\ExampleFinder'] = new \phpDocumentor\Reflection\DocBlock\ExampleFinder())));
    }
}
